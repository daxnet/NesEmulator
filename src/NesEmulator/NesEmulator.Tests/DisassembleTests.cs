using NesEmulator.Core;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace NesEmulator.Tests
{
    public class DisassembleTests
    {
        private const string PRG1 = @"$8000   A905     LDA #$05
$8002   E909     SBC #$09
";
        private const string PRG2 = @"$8000   A901     LDA #$01
$8002   85F0     STA $F0
$8004   A9CC     LDA #$CC
$8006   85F1     STA $F1
$8008   6CF000   JMP ($00F0)
";
        private const string PRG3 = @"$8000   A201     LDX #$01
$8002   A905     LDA #$05
$8004   8501     STA $01
$8006   A907     LDA #$07
$8008   8502     STA $02
$800A   A00A     LDY #$0A
$800C   8C0507   STY $0705
$800F   A100     LDA ($00,X)
";

        private readonly Emulator emulator = new();

        [Test]
        public void SimpleTest1Test()
        {
            var program = new byte[] { 0xa9, 0x05, 0xe9, 0x09 };
            var asm = emulator.Cpu.Disassemble(program);
            Assert.That(asm, Is.EqualTo(PRG1));
        }

        [Test]
        public void SimpleTest2Test()
        {
            var program = new byte[] { 0xa9, 0x01, 0x85, 0xf0, 0xa9, 0xcc, 0x85, 0xf1, 0x6c, 0xf0, 0x00 };
            var asm = emulator.Cpu.Disassemble(program);
            Assert.That(asm, Is.EqualTo(PRG2));
        }

        [Test]
        public void SimpleTest3Test()
        {
            var program = new byte[] 
            {
                0xa2, 0x01, 0xa9, 0x05, 0x85, 
                0x01, 0xa9, 0x07, 0x85, 0x02, 
                0xa0, 0x0a, 0x8c, 0x05, 0x07, 
                0xa1, 0x00 
            };
            var asm = emulator.Cpu.Disassemble(program);
            Assert.That(asm, Is.EqualTo(PRG3));
        }

        [Test]
        public void SimpleTest4Test()
        {
            var program = new byte[]
            {
                0x20, 0x06, 0x06, 0x20, 0x38, 0x06, 0x20, 0x0d, 0x06, 0x20, 0x2a, 0x06, 0x60, 0xa9, 0x02, 0x85,
                0x02, 0xa9, 0x04, 0x85, 0x03, 0xa9, 0x11, 0x85, 0x10, 0xa9, 0x10, 0x85, 0x12, 0xa9, 0x0f, 0x85,
                0x14, 0xa9, 0x04, 0x85, 0x11, 0x85, 0x13, 0x85, 0x15, 0x60, 0xa5, 0xfe, 0x85, 0x00, 0xa5, 0xfe,
                0x29, 0x03, 0x18, 0x69, 0x02, 0x85, 0x01, 0x60, 0x20, 0x4d, 0x06, 0x20, 0x8d, 0x06, 0x20, 0xc3,
                0x06, 0x20, 0x19, 0x07, 0x20, 0x20, 0x07, 0x20, 0x2d, 0x07, 0x4c, 0x38, 0x06, 0xa5, 0xff, 0xc9,
                0x77, 0xf0, 0x0d, 0xc9, 0x64, 0xf0, 0x14, 0xc9, 0x73, 0xf0, 0x1b, 0xc9, 0x61, 0xf0, 0x22, 0x60,
                0xa9, 0x04, 0x24, 0x02, 0xd0, 0x26, 0xa9, 0x01, 0x85, 0x02, 0x60, 0xa9, 0x08, 0x24, 0x02, 0xd0,
                0x1b, 0xa9, 0x02, 0x85, 0x02, 0x60, 0xa9, 0x01, 0x24, 0x02, 0xd0, 0x10, 0xa9, 0x04, 0x85, 0x02,
                0x60, 0xa9, 0x02, 0x24, 0x02, 0xd0, 0x05, 0xa9, 0x08, 0x85, 0x02, 0x60, 0x60, 0x20, 0x94, 0x06,
                0x20, 0xa8, 0x06, 0x60, 0xa5, 0x00, 0xc5, 0x10, 0xd0, 0x0d, 0xa5, 0x01, 0xc5, 0x11, 0xd0, 0x07,
                0xe6, 0x03, 0xe6, 0x03, 0x20, 0x2a, 0x06, 0x60, 0xa2, 0x02, 0xb5, 0x10, 0xc5, 0x10, 0xd0, 0x06,
                0xb5, 0x11, 0xc5, 0x11, 0xf0, 0x09, 0xe8, 0xe8, 0xe4, 0x03, 0xf0, 0x06, 0x4c, 0xaa, 0x06, 0x4c,
                0x35, 0x07, 0x60, 0xa6, 0x03, 0xca, 0x8a, 0xb5, 0x10, 0x95, 0x12, 0xca, 0x10, 0xf9, 0xa5, 0x02,
                0x4a, 0xb0, 0x09, 0x4a, 0xb0, 0x19, 0x4a, 0xb0, 0x1f, 0x4a, 0xb0, 0x2f, 0xa5, 0x10, 0x38, 0xe9,
                0x20, 0x85, 0x10, 0x90, 0x01, 0x60, 0xc6, 0x11, 0xa9, 0x01, 0xc5, 0x11, 0xf0, 0x28, 0x60, 0xe6,
                0x10, 0xa9, 0x1f, 0x24, 0x10, 0xf0, 0x1f, 0x60, 0xa5, 0x10, 0x18, 0x69, 0x20, 0x85, 0x10, 0xb0,
                0x01, 0x60, 0xe6, 0x11, 0xa9, 0x06, 0xc5, 0x11, 0xf0, 0x0c, 0x60, 0xc6, 0x10, 0xa5, 0x10, 0x29,
                0x1f, 0xc9, 0x1f, 0xf0, 0x01, 0x60, 0x4c, 0x35, 0x07, 0xa0, 0x00, 0xa5, 0xfe, 0x91, 0x00, 0x60,
                0xa6, 0x03, 0xa9, 0x00, 0x81, 0x10, 0xa2, 0x00, 0xa9, 0x01, 0x81, 0x10, 0x60, 0xa2, 0x00, 0xea,
                0xea, 0xca, 0xd0, 0xfb, 0x60
            };
            var asm = emulator.Cpu.Disassemble(program);

        }
    }
}
